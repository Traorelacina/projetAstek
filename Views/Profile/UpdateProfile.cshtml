@model WebApplication1.Models.UpdateProfileViewModel


<style>
/* Styles généraux de la page */
.container {
    max-width: 1200px;
    margin: 2rem auto;
    padding: 0 1.5rem;
}

/* Titre principal */
h2 {
    color: #2D3748;
    font-size: 2rem;
    font-weight: 700;
    margin-bottom: 2rem;
    position: relative;
    padding-bottom: 0.5rem;
}

h2::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 60px;
    height: 4px;
    background: linear-gradient(135deg, #4299e1, #3182ce);
    border-radius: 2px;
}

/* Styles des alertes */
.alert {
    border-radius: 8px;
    padding: 1rem 1.5rem;
    margin-bottom: 2rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.alert-success {
    background-color: #C6F6D5;
    border: 1px solid #9AE6B4;
    color: #22543D;
}

.alert-danger {
    background-color: #FED7D7;
    border: 1px solid #FEB2B2;
    color: #822727;
}

.alert ul {
    margin: 0;
    padding-left: 1.5rem;
}

.alert li {
    margin-bottom: 0.5rem;
}

/* Styles de la carte de profil */
.card {
    background: white;
    border-radius: 16px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05), 
                0 10px 15px -3px rgba(0, 0, 0, 0.1);
    border: none;
    overflow: hidden;
    transition: transform 0.2s ease;
}

.card:hover {
    transform: translateY(-2px);
}

.card-body {
    padding: 2rem;
}

/* Styles des groupes de formulaire */
.form-group {
    margin-bottom: 1.5rem;
}

.form-label {
    display: block;
    color: #718096;
    font-size: 0.875rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
}

.form-control-static {
    color: #2D3748;
    font-size: 1rem;
    padding: 0.5rem 0;
    border-bottom: 1px solid #E2E8F0;
    margin: 0;
}

/* Style du bouton */
.btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.2s ease;
    cursor: pointer;
    border: none;
}

.btn-primary {
    background: linear-gradient(135deg, #4299e1, #3182ce);
    color: white;
    box-shadow: 0 4px 6px rgba(66, 153, 225, 0.2);
}

.btn-primary:hover {
    background: linear-gradient(135deg, #3182ce, #2c5282);
    transform: translateY(-1px);
    box-shadow: 0 6px 8px rgba(66, 153, 225, 0.3);
}

/* Media Queries pour le responsive */

    .container {
        padding: 0 1rem;
    }

    .card-body {
        padding: 1.5rem;
    }

    h2 {
        font-size: 1.5rem;
    }

    .btn {
        width: 100%;
    }
}



.alert {
    animation: slideIn 0.3s ease forwards;
}
</style>

<h2 class="text-center my-4">Modifier mon profil</h2>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-body">
                    @using (Html.BeginForm("UpdateProfile", "Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                        @if (!ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-danger">
                                <ul>
                                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                    {
                                        <li>@error.ErrorMessage</li>
                                    }
                                </ul>
                            </div>
                        }

                        <!-- Photo de profil actuelle -->
                        @if (!string.IsNullOrEmpty(Model.ProfilePicture))
                        {
                            <div class="text-center mb-4">
                                <img src="@Model.ProfilePicture" alt="Photo de profil" class="rounded-circle" width="150" height="150" />
                            </div>
                        }

                        <!-- Champ pour uploader une nouvelle photo -->
                        <div class="form-group mb-3">
                            @Html.Label("profileImage", "Changer la photo de profil", new { @class = "form-label" })
                            <input type="file" name="profileImage" class="form-control" accept="image/*" />
                            @Html.ValidationMessage("profileImage", "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(m => m.FirstName, "Prénom", new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(m => m.LastName, "Nom", new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(m => m.Email, "Email", new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>

                        <hr />

                        <h4>Modifier le mot de passe (optionnel)</h4>

                        <div class="form-group mb-3">
                            @Html.LabelFor(m => m.CurrentPassword, "Mot de passe actuel", new { @class = "form-label" })
                            @Html.PasswordFor(m => m.CurrentPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.CurrentPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(m => m.NewPassword, "Nouveau mot de passe", new { @class = "form-label" })
                            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(m => m.ConfirmNewPassword, "Confirmer le nouveau mot de passe", new { @class = "form-label" })
                            @Html.PasswordFor(m => m.ConfirmNewPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.ConfirmNewPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="mt-4 text-center">
                            <button type="submit" class="btn btn-primary px-4 py-2">Enregistrer les modifications</button>
                            <a href="@Url.Action("GetProfile", "Profile")" class="btn btn-secondary ms-2 px-4 py-2">Annuler</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
